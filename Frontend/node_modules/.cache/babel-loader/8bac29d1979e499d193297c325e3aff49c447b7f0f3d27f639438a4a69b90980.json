{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\realtime-whiteboard\\\\front\\\\src\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport rough from \"roughjs/bundled/rough.esm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generator = rough.generator();\nconst Canvas = ({\n  canvasRef,\n  ctx,\n  color,\n  setElements,\n  elements,\n  tool\n}) => {\n  _s();\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  // Khởi tạo canvas theo kích thước container + hỗ trợ màn hình Retina\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const parent = canvas.parentElement;\n    const cssW = parent.clientWidth;\n    const cssH = parent.clientHeight;\n    const dpr = Math.max(1, window.devicePixelRatio || 1);\n    canvas.width = Math.round(cssW * dpr);\n    canvas.height = Math.round(cssH * dpr);\n    canvas.style.width = cssW + \"px\";\n    canvas.style.height = cssH + \"px\";\n    const context = canvas.getContext(\"2d\");\n    context.setTransform(1, 0, 0, 1, 0, 0);\n    context.scale(dpr, dpr);\n    context.lineCap = \"round\";\n    context.strokeStyle = color;\n    context.lineWidth = 5; // dùng lineWidth (strokeWidth không tồn tại)\n    ctx.current = context;\n    const onResize = () => {\n      const cssW2 = parent.clientWidth;\n      const cssH2 = parent.clientHeight;\n      const dpr2 = Math.max(1, window.devicePixelRatio || 1);\n      canvas.width = Math.round(cssW2 * dpr2);\n      canvas.height = Math.round(cssH2 * dpr2);\n      canvas.style.width = cssW2 + \"px\";\n      canvas.style.height = cssH2 + \"px\";\n      context.setTransform(1, 0, 0, 1, 0, 0);\n      context.scale(dpr2, dpr2);\n      // vẽ lại các phần tử sau resize\n      redraw();\n    };\n    window.addEventListener(\"resize\", onResize);\n    return () => window.removeEventListener(\"resize\", onResize);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Đổi màu nét vẽ\n  useEffect(() => {\n    if (ctx.current) ctx.current.strokeStyle = color;\n  }, [color, ctx]);\n  const handleMouseDown = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    if (tool === \"pencil\") {\n      setElements(prev => [...prev, {\n        offsetX,\n        offsetY,\n        path: [[offsetX, offsetY]],\n        stroke: color,\n        element: \"pencil\"\n      }]);\n    } else {\n      setElements(prev => [...prev, {\n        offsetX,\n        offsetY,\n        stroke: color,\n        element: tool\n      }]);\n    }\n    setIsDrawing(true);\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    if (tool === \"rect\") {\n      setElements(prev => prev.map((ele, index) => index === elements.length - 1 ? {\n        ...ele,\n        // width/height dương để vẽ ổn định\n        width: Math.abs(offsetX - ele.offsetX),\n        height: Math.abs(offsetY - ele.offsetY),\n        // nếu kéo ngược, chỉnh lại gốc\n        offsetX: offsetX < ele.offsetX ? offsetX : ele.offsetX,\n        offsetY: offsetY < ele.offsetY ? offsetY : ele.offsetY\n      } : ele));\n    } else if (tool === \"line\") {\n      setElements(prev => prev.map((ele, index) => index === elements.length - 1 ? {\n        ...ele,\n        width: offsetX,\n        // dùng như x2\n        height: offsetY // dùng như y2\n      } : ele));\n    } else if (tool === \"pencil\") {\n      setElements(prev => prev.map((ele, index) => index === elements.length - 1 ? {\n        ...ele,\n        path: [...ele.path, [offsetX, offsetY]]\n      } : ele));\n    }\n  };\n  const handleMouseUp = () => setIsDrawing(false);\n\n  // Vẽ lại mọi thứ lên canvas\n  const redraw = () => {\n    const canvas = canvasRef.current;\n    const roughCanvas = rough.canvas(canvas);\n    ctx.current.clearRect(0, 0, canvas.width, canvas.height);\n    elements.forEach(ele => {\n      if (ele.element === \"rect\") {\n        roughCanvas.draw(generator.rectangle(ele.offsetX, ele.offsetY, ele.width, ele.height, {\n          stroke: ele.stroke,\n          roughness: 0,\n          strokeWidth: 5\n        }));\n      } else if (ele.element === \"line\") {\n        roughCanvas.draw(generator.line(ele.offsetX, ele.offsetY, ele.width, ele.height, {\n          stroke: ele.stroke,\n          roughness: 0,\n          strokeWidth: 5\n        }));\n      } else if (ele.element === \"pencil\") {\n        roughCanvas.linearPath(ele.path, {\n          stroke: ele.stroke,\n          roughness: 0,\n          strokeWidth: 5\n        });\n      }\n    });\n  };\n\n  // Mỗi khi elements đổi → vẽ lại\n  useLayoutEffect(() => {\n    if (!ctx.current) return;\n    redraw();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elements]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-8 overflow-hidden border border-dark px-0 mx-auto mt-3\",\n    style: {\n      height: \"500px\"\n    },\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"msMTcjGTX00fhl9Ndli+Oox7VUQ=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useState","rough","jsxDEV","_jsxDEV","generator","Canvas","canvasRef","ctx","color","setElements","elements","tool","_s","isDrawing","setIsDrawing","canvas","current","parent","parentElement","cssW","clientWidth","cssH","clientHeight","dpr","Math","max","window","devicePixelRatio","width","round","height","style","context","getContext","setTransform","scale","lineCap","strokeStyle","lineWidth","onResize","cssW2","cssH2","dpr2","redraw","addEventListener","removeEventListener","handleMouseDown","e","offsetX","offsetY","nativeEvent","prev","path","stroke","element","handleMouseMove","map","ele","index","length","abs","handleMouseUp","roughCanvas","clearRect","forEach","draw","rectangle","roughness","strokeWidth","line","linearPath","className","onMouseDown","onMouseMove","onMouseUp","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/code/realtime-whiteboard/front/src/Canvas.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport rough from \"roughjs/bundled/rough.esm\";\r\n\r\nconst generator = rough.generator();\r\n\r\nconst Canvas = ({ canvasRef, ctx, color, setElements, elements, tool }) => {\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n\r\n  // Khởi tạo canvas theo kích thước container + hỗ trợ màn hình Retina\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const parent = canvas.parentElement;\r\n    const cssW = parent.clientWidth;\r\n    const cssH = parent.clientHeight;\r\n    const dpr = Math.max(1, window.devicePixelRatio || 1);\r\n\r\n    canvas.width = Math.round(cssW * dpr);\r\n    canvas.height = Math.round(cssH * dpr);\r\n    canvas.style.width = cssW + \"px\";\r\n    canvas.style.height = cssH + \"px\";\r\n\r\n    const context = canvas.getContext(\"2d\");\r\n    context.setTransform(1, 0, 0, 1, 0, 0);\r\n    context.scale(dpr, dpr);\r\n    context.lineCap = \"round\";\r\n    context.strokeStyle = color;\r\n    context.lineWidth = 5; // dùng lineWidth (strokeWidth không tồn tại)\r\n    ctx.current = context;\r\n\r\n    const onResize = () => {\r\n      const cssW2 = parent.clientWidth;\r\n      const cssH2 = parent.clientHeight;\r\n      const dpr2 = Math.max(1, window.devicePixelRatio || 1);\r\n      canvas.width = Math.round(cssW2 * dpr2);\r\n      canvas.height = Math.round(cssH2 * dpr2);\r\n      canvas.style.width = cssW2 + \"px\";\r\n      canvas.style.height = cssH2 + \"px\";\r\n      context.setTransform(1, 0, 0, 1, 0, 0);\r\n      context.scale(dpr2, dpr2);\r\n      // vẽ lại các phần tử sau resize\r\n      redraw();\r\n    };\r\n    window.addEventListener(\"resize\", onResize);\r\n    return () => window.removeEventListener(\"resize\", onResize);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Đổi màu nét vẽ\r\n  useEffect(() => {\r\n    if (ctx.current) ctx.current.strokeStyle = color;\r\n  }, [color, ctx]);\r\n\r\n  const handleMouseDown = (e) => {\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n\r\n    if (tool === \"pencil\") {\r\n      setElements((prev) => [\r\n        ...prev,\r\n        {\r\n          offsetX,\r\n          offsetY,\r\n          path: [[offsetX, offsetY]],\r\n          stroke: color,\r\n          element: \"pencil\",\r\n        },\r\n      ]);\r\n    } else {\r\n      setElements((prev) => [\r\n        ...prev,\r\n        { offsetX, offsetY, stroke: color, element: tool },\r\n      ]);\r\n    }\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDrawing) return;\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n\r\n    if (tool === \"rect\") {\r\n      setElements((prev) =>\r\n        prev.map((ele, index) =>\r\n          index === elements.length - 1\r\n            ? {\r\n                ...ele,\r\n                // width/height dương để vẽ ổn định\r\n                width: Math.abs(offsetX - ele.offsetX),\r\n                height: Math.abs(offsetY - ele.offsetY),\r\n                // nếu kéo ngược, chỉnh lại gốc\r\n                offsetX:\r\n                  offsetX < ele.offsetX ? offsetX : ele.offsetX,\r\n                offsetY:\r\n                  offsetY < ele.offsetY ? offsetY : ele.offsetY,\r\n              }\r\n            : ele\r\n        )\r\n      );\r\n    } else if (tool === \"line\") {\r\n      setElements((prev) =>\r\n        prev.map((ele, index) =>\r\n          index === elements.length - 1\r\n            ? {\r\n                ...ele,\r\n                width: offsetX, // dùng như x2\r\n                height: offsetY, // dùng như y2\r\n              }\r\n            : ele\r\n        )\r\n      );\r\n    } else if (tool === \"pencil\") {\r\n      setElements((prev) =>\r\n        prev.map((ele, index) =>\r\n          index === elements.length - 1\r\n            ? { ...ele, path: [...ele.path, [offsetX, offsetY]] }\r\n            : ele\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => setIsDrawing(false);\r\n\r\n  // Vẽ lại mọi thứ lên canvas\r\n  const redraw = () => {\r\n    const canvas = canvasRef.current;\r\n    const roughCanvas = rough.canvas(canvas);\r\n    ctx.current.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    elements.forEach((ele) => {\r\n      if (ele.element === \"rect\") {\r\n        roughCanvas.draw(\r\n          generator.rectangle(ele.offsetX, ele.offsetY, ele.width, ele.height, {\r\n            stroke: ele.stroke,\r\n            roughness: 0,\r\n            strokeWidth: 5,\r\n          })\r\n        );\r\n      } else if (ele.element === \"line\") {\r\n        roughCanvas.draw(\r\n          generator.line(ele.offsetX, ele.offsetY, ele.width, ele.height, {\r\n            stroke: ele.stroke,\r\n            roughness: 0,\r\n            strokeWidth: 5,\r\n          })\r\n        );\r\n      } else if (ele.element === \"pencil\") {\r\n        roughCanvas.linearPath(ele.path, {\r\n          stroke: ele.stroke,\r\n          roughness: 0,\r\n          strokeWidth: 5,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // Mỗi khi elements đổi → vẽ lại\r\n  useLayoutEffect(() => {\r\n    if (!ctx.current) return;\r\n    redraw();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [elements]);\r\n\r\n  return (\r\n    <div\r\n      className=\"col-md-8 overflow-hidden border border-dark px-0 mx-auto mt-3\"\r\n      style={{ height: \"500px\" }}\r\n      onMouseDown={handleMouseDown}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseUp={handleMouseUp}\r\n    >\r\n      <canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}